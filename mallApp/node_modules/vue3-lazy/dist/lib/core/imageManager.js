"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var types_1 = require("../types");
var loadImage_1 = require("../helpers/loadImage");
var debug_1 = require("../helpers/debug");
var ImageManager = /** @class */ (function () {
    function ImageManager(options) {
        this.el = options.el;
        this.parent = options.parent;
        this.src = options.src;
        this.error = options.error;
        this.loading = options.loading;
        this.cache = options.cache;
        this.state = types_1.State.loading;
        this.render(this.loading);
    }
    ImageManager.prototype.load = function (next) {
        if (this.state > types_1.State.loading) {
            return;
        }
        if (this.cache.has(this.src)) {
            this.state = types_1.State.loaded;
            this.render(this.src);
            return;
        }
        this.renderSrc(next);
    };
    ImageManager.prototype.isInView = function () {
        var rect = this.el.getBoundingClientRect();
        return rect.top < window.innerHeight && rect.left < window.innerWidth;
    };
    ImageManager.prototype.update = function (src) {
        var currentSrc = this.src;
        if (src !== currentSrc) {
            this.src = src;
            this.state = types_1.State.loading;
        }
    };
    ImageManager.prototype.renderSrc = function (next) {
        var _this = this;
        loadImage_1.default(this.src).then(function () {
            _this.state = types_1.State.loaded;
            _this.render(_this.src);
            _this.cache.add(_this.src);
            next && next();
        }).catch(function (e) {
            _this.state = types_1.State.error;
            _this.render(_this.error);
            debug_1.warn("load failed with src image(" + _this.src + ") and the error msg is " + e.message);
            next && next();
        });
    };
    ImageManager.prototype.render = function (src) {
        this.el.setAttribute('src', src);
    };
    return ImageManager;
}());
exports.default = ImageManager;
//# sourceMappingURL=imageManager.js.map